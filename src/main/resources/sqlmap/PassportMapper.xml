<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mlx.uac.dao.PassportMapper">
	<resultMap id="BaseResultMap" type="com.mlx.uac.model.Passport">
		<id column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="salt" property="salt" jdbcType="VARCHAR" />
		<result column="reg_date" property="regDate" jdbcType="VARCHAR" />
		<result column="reg_time" property="regTime" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
	</resultMap>
	
	<sql id="Example_Where_Clause">
		<trim prefix="where" prefixOverrides="and|or">
			<if test="userId != null and userId != ''">
				and user_id = #{userId}
			</if>
			<if test="status != null and status != ''">
				AND status = #{status,jdbcType=VARCHAR}
			</if>
		</trim>
	</sql>
	
	<sql id="Base_Column_List">
		user_id, status, salt, reg_date, reg_time, create_time, update_time
	</sql>
	
	<select id="select" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from passport
		where user_id = #{userId,jdbcType=INTEGER}
	</select>
	
	<select id="list" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from passport
		<include refid="Example_Where_Clause" />
	</select>
	
	<delete id="delete" parameterType="java.lang.Integer">
		delete from passport
		where user_id = #{userId,jdbcType=INTEGER}
	</delete>
	
	<insert id="insert" parameterType="com.mlx.uac.model.Passport">
		insert into passport
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				user_id,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="salt != null">
				salt,
			</if>
			<if test="regDate != null">
				reg_date,
			</if>
			<if test="regTime != null">
				reg_time,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="salt != null">
				#{salt,jdbcType=VARCHAR},
			</if>
			<if test="regDate != null">
				#{regDate,jdbcType=VARCHAR},
			</if>
			<if test="regTime != null">
				#{regTime,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	
	<update id="update" parameterType="com.mlx.uac.model.Passport">
		update passport
		<set>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="salt != null">
				salt = #{salt,jdbcType=VARCHAR},
			</if>
			<if test="regDate != null">
				reg_date = #{regDate,jdbcType=VARCHAR},
			</if>
			<if test="regTime != null">
				reg_time = #{regTime,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where user_id = #{userId,jdbcType=INTEGER}
	</update>
</mapper>